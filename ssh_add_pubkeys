#!/usr/bin/env bash

[[ -n ${HOME} ]] || { printf  "WFT? where is your \$HOME!"; exit; }

export IFS=$'\n'
export VALID_TYPES=(
ssh-ed25519
)
export array_keys=(
"$*"
)

if [ $# -eq 0 ] || [[ "${1}" =~ ^[[:space:]]*$ ]] ; then
    printf "Usage: ssh_add_pubkeys [ STRING ]\n\n\tExample:\n\tssh_add_pubkeys \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGEVAjTbO92GVpd3faKEEjHffeNfBiNNpEA/q6MWuCMp stefano@PC-STEFANO\"\n"
    printf "\n\tValid types:\n\t${VALID_TYPES[@]}\n"
    exit 1
fi

mkdir -p ${HOME}/.ssh && \
  chmod 700 ${HOME}/.ssh
touch ${HOME}/.ssh/authorized_keys && \
  chmod 600 ${HOME}/.ssh/authorized_keys

check_key(){
  for t in ${VALID_TYPES[@]}
  do
    printf "${@:1:1}" | grep -q "${t}" || {
      printf "Type: ${@:1:1} not vaild\n\t\"${@:1:1} ${@:2:1} ${@:3:1}\"\n";
      continue;
    }
  done

  if grep -q ${@:2:1} ${HOME}/.ssh/authorized_keys; then
    grep -q "${@:2:1}" ${HOME}/.ssh/authorized_keys && { 
      printf "This key already exist:\n\t${@:2:1} \n";
      grep --color "${@:2:1}" ${HOME}/.ssh/authorized_keys
    }
  fi
}
export -f check_key

for i in ${array_keys[@]}
do
  declare -a key
  key=($( printf ${i} |tr " " "\n" ))
  T="${key[0]}"
  K="${key[1]}"
  C="${key[2]}"

  check_key "$T" "$K" "$C" && \
    continue

  printf "${T} ${K} ${C}\n" >> ${HOME}/.ssh/authorized_keys && \
    printf "Added: ${T} ${K} ${C}\n"
done
